# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "1h"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Logging configuration:
  ## Run telegraf with debug log messages.
  debug = false
  ## Run telegraf in quiet mode (error log messages only).
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  # logfile = "/usr/local/Cellar/telegraf/log/telegraf.log"
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = true


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB cluster nodes.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]

  ## Token for authentication.
  token = "$INFLUX_DB_TOKEN"

  ## Organization is the name of the organization you wish to write to.
  organization = "jakub_bednar"

  ## Destination bucket to write into.
  bucket = "github"

  ## The value of this tag will be used to determine the bucket.  If this
  ## tag is not set the 'bucket' option is used as the default.
  # bucket_tag = ""

  ## If true, the bucket tag will not be added to the metric.
  # exclude_bucket_tag = false

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "gzip"

  ## Enable or disable uint support for writing uints influxdb 2.0.
  # influx_uint_support = false

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.github]]
## List of repositories to monitor
  repositories = [
    "influxdata/influxdb-client-java",
    "influxdata/influxdb-client-csharp",
    "influxdata/nifi-influxdb-bundle",
    "influxdata/influxdb-client-python",
    "influxdata/influxdb-client-ruby",
    "influxdata/influxdb-client-js",
    "influxdata/influxdb-plugin-fluent",
    "influxdata/influxdb-client-php",
    "influxdata/influxdb-client-go",
    "bonitoo-io/influxdb-client-arduino"
  ]

  ## Github API access token.  Unauthenticated requests are limited to 60 per hour.
  # access_token = ""

  ## Github API enterprise url. Github Enterprise accounts must specify their base url.
  # enterprise_base_url = ""

  ## Timeout for HTTP requests.
  # http_timeout = "5s"

[[inputs.exec]]
  timeout = "10s"
  data_format = "json"
  commands = [
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-java",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-csharp",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-python",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-ruby",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-php",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-js",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-client-go",
    "curl https://circleci.com/api/v1.1/project/gh/influxdata/influxdb-plugin-fluent",
  ]
  name_override = "circleci"
  json_time_key = "stop_time"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  tag_keys = ["reponame", "vcs_url"]
  json_string_fields = ["status", "lifecycle", "failed", "author_name", "author_email"]

[[inputs.exec]]
  timeout = "10s"
  data_format = "json"
   commands = [
      "curl https://api.travis-ci.org/repos/influxdata/nifi-influxdb-bundle/builds",
    ]
  name_override = "travisci"
  json_time_key = "finished_at"
  json_time_format = "2006-01-02T15:04:05Z07:00"
  tag_keys = ["repository_id"]
  json_string_fields = ["state", "result"]
